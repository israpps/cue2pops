name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  clean_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: github.ref == 'refs/heads/master'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create changelog
        if: github.ref == 'refs/heads/master'
        run: |
          echo "![Downloads](https://img.shields.io/github/downloads/${{ github.repository }}/Latest/total)">CHANGELOG.MD
          echo Latest changes:>>CHANGELOG.MD
          if [ $(git tag -l "Latest") ]; then COMPARISON="Latest..HEAD"; else COMPARISON=""; fi
          git --no-pager log $COMPARISON --pretty=format:"- %h  %<(18)%an: %s">>CHANGELOG.MD
          cat CHANGELOG.MD

      - name: delete previous tag/release
        if: github.ref == 'refs/heads/master'
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: "Latest"
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy pre-release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/master'
        with:
          body_path: CHANGELOG.MD
          token: "${{ secrets.GITHUB_TOKEN }}"
          fail_on_unmatched_files: false
          name: "Latest build"
          tag_name: "Latest"
          prerelease: true

  build:
    needs: [clean_release]
    strategy:
     matrix:
       toolchain: ["windows-static-x86", "linux-x86", "windows-static-x64", "linux-x64"]
    runs-on: ubuntu-latest
    container: dockcross/${{ matrix.toolchain }}:latest
    steps:

    - uses: actions/checkout@v2
    - run: |
        sudo apt-get install --assume-yes p7zip-full 
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git fetch --prune --unshallow
        
    - name: Compile project
      run: |
        DATEE=`date '+[%Y-%m-%d]'`
        echo "package compiled and released on $DATEE" >>README.KD
        echo "Commit  ${{ github.sha }}" >>README.MD
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make clean all

    - name: compress
      run: |
        cd build
        7z a -t7z Cue2POPS-${{ matrix.toolchain }}.7z cue2pops* ../README.MD ../PATCHES.TXT

    - name: "compress (windows-only files)"
      if: contains(matrix.toolchain, 'windows')
      run: |
        cd build
        7z a -t7z Cue2POPS-${{ matrix.toolchain }}.7z "../drag&drop.bat" ../batch_convert.bat

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: Cue2POPS-${{ matrix.toolchain }}
        path: |
             build/Cue2POPS*.7z
             
    - name: Deploy pre-release
      uses: softprops/action-gh-release@v1
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        fail_on_unmatched_files: true
        files: |
            build/Cue2POPS*.7z
        name: "Latest build"
        tag_name: "Latest"
        prerelease: true
        
